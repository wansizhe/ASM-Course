_DATA	SEGMENT	'DATA'
SUMI	DW	?
SUMF	DW	?
NX	DB	102,90,67,89,98,125
LEV	DB	80
_DATA	ENDS
_TEXT	SEGMENT	'CODE'
	ASSUME CS: _TEXT, DS: _DATA
MAIN	PROC	FAR
START:	MOV	AX, _DATA
	MOV	DS, AX
	SUB	AX, AX
	SUB	BX, BX
	SUB	CX, CX
	SUB	DX, DX
	MOV	CX, 6
AGAIN:	SUB	AX, AX
	SUB	BX, BX
	SUB	DX, DX
	MOV	BX, OFFSET SUMF
	ADD	BX, 1
	ADD	BX, CX
	MOV	AL, [BX]
	CMP	AL, LEV
	JNB	LOC1
	MOV	AL, LEV
	SUB	AL, [BX]
	SUB	SUMI, AX
	MOV	DL, 2
	MUL	DL
	SUB	SUMF, AX
	JMP	LOC2
LOC1:	SUB	AL, LEV
	ADD	SUMI, AX
	MOV	DL, 5
	MUL	DL
	ADD	SUMF, AX
LOC2:	LOOP	AGAIN
	SUB	AX, AX
	SUB	BX, BX
	SUB	DX, DX
	MOV	AX, SUMF
	MOV	BL, 10
	DIV	BL
	MOV	DL, AH
	MOV	AH, 0
	ADD	SUMI, AX
	MOV	SUMF, 0
	MOV	SUMF, DX
	
	MOV	AX, SUMI
	ADD	AX, 600
	CALL	DISPAX
	SUB	AX, AX
	MOV	DL, '.'
	MOV	AH, 02H
	INT	21H
	SUB	AX, AX
	MOV	AX, SUMF
	CALL	DISPAX
	MOV	AX, 4C00H
	INT	21H
MAIN	ENDP

DISPAX  PROC    NEAR
        mov bx,10
	xor cx,cx
Q0:	xor dx,dx
	div bx
	or dx,0e30h
	push dx
	inc cx
	cmp ax,0
	jnz Q0
Q1:	pop ax
	int 10h
	loop Q1
	ret
DISPAX  ENDP

_TEXT	ENDS
	END START
